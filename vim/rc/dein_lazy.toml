[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = '''
    if executable('rg')
        call denite#custom#var('file/rec', 'command',
        \ ['rg', '--files', '--unrestricted', '--hidden', '--glob', '!.git'])
        call denite#custom#var('grep', 'command', ['rg', '--threads', '1'])
        call denite#custom#var('grep', 'recursive_opts', [])
        call denite#custom#var('grep', 'final_opts', [])
        call denite#custom#var('grep', 'separator', ['--'])
        call denite#custom#var('grep', 'default_opts',
              \ ['-i', '--vimgrep', '--no-heading','--smart-case'])
    endif
'''
hook_add = '''
    nmap <silent> <C-d><C-t> :<C-u>Denite filetype<CR>
    nmap <silent> <C-d><C-p> :<C-u>Denite file/rec<CR>
    nmap <silent> <C-d><C-g> :<C-u>Denite grep<CR>
    nmap <silent> <C-d><C-r> :<C-u>Denite -resume<CR>
    nmap <silent> <C-d><C-j> :<C-u>DeniteCursorWord grep<CR>
    nmap <silent> <C-d><C-d> :<C-u>call denite#start([{'name': 'file/rec', 'args': ['~/.dotfiles']}])<CR>
    autocmd FileType denite call s:denite_my_settings()
    function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
    nnoremap <silent><buffer><expr> r
    \ denite#do_map('redraw')'
    endfunction
'''
[[plugins]]
repo='Shougo/deoplete.nvim'
hook_source = '''
    let g:deoplete#enable_at_startup = 1
'''
on_i = 1
[[plugins]]
repo='cohama/lexima.vim'
on_i = 1
[[plugins]]
repo='Shougo/neosnippet.vim'
depends=['neosnippet-snippets']
on_i = 1
on_ft = ['snippet']
hook_source = '''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)

    smap <expr><TAB> neosnippet_expand_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

    if has('conceal')
        set conceallevel=2 concealcursor=niv
    endif
'''
[[plugins]]
repo='Shougo/neosnippet-snippets'
on_i = 1
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']
[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript']
[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript']
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css']
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']
[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = ['pug']
[[plugins]]
repo = 'chrisbra/csv.vim'
on_ft = ['csv']
